name: Build Project111


on:
#   workflow_dispatch:  
 
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
jobs:
  build-and-test:
    runs-on: windows-latest
#     runs-on: self-hosted
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2
        with:
          ref: dev
      - name: Get Date
        id: date
        shell: pwsh
        run: |
          $date = Get-Date -Format "yyyyMMddHHmmss"
          echo "::set-output name=date::$date"

      - name: Get latest version tag
        id: get_latest_tag
        run: |
          $lastTag = git tag -l --sort=-v:refname "v1.0.*" | sort -V | Select-Object -Last 1
          echo $lastTag.Length
          echo ($lastTag.Length -lt 5)
          if ($lastTag.Length -lt 5) {
            $newTag = "v1.0.1"
          } else {
            $tagParts = $lastTag -split '\.'
            echo $tagParts
            $thirdPart = [int]$tagParts[2] + 1
            echo $thirdPart
            $newTag = ($tagParts[0..1] -join '.') + ".$thirdPart"
          }
          echo "NEW_TAG=$newTag" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
          echo $newTag
          
      - name: Setup .NET Framework
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 5.0.x

      - name: Restore NuGet Packages
        run: |
          cd ParserGUI
          nuget restore
        
          
      - name: Build Solution
        run: |
          (Get-Item .).FullName
          Get-ChildItem
          cd ParserGUI
          (Get-Item .).FullName
          Get-ChildItem
          $env:Path += ";C:\Program Files\Microsoft Visual Studio\2022\Enterprise\MSBuild\Current\bin"
          msbuild /p:Configuration=Release ParserGUI.sln
          Get-ChildItem -Verbose
          Get-ChildItem -Verbose

     
      - name: Create Release
        id: create_release
        uses: zendesk/action-create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 
        with:
#           tag_name: release-${{ github.run_number }}-${{ steps.date.outputs.date }}
#           release_name: "Release: "
          tag_name: ${{ env.NEW_TAG }}
          release_name: "Release ${{ env.NEW_TAG }}"
          body: "Build info: Version: ${{ env.NEW_TAG }}, from commit SHA: ${{ github.sha }}"
          draft: false
          prerelease: false

      - name: Upload Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ParserGUI\ParserGUI\bin\Release\ParserGUI.exe
          asset_name: ParserGUI.exe
          asset_content_type: application/x-msdownload
